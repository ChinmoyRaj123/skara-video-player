@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto/Roboto-Regular.ttf") format("truetype");
}

:root {
  --skaraVideoPrimaryColor: #EF4136;
  --skaraVideoSecondaryColor: #EFFAB0;
  --skaraVideoPopup: #1655B2;
  --skaraVideoPopupBg: #02122A;
  --skaraVideoOsdBg: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
  --skaraVideoToolbarBg: linear-gradient(180deg, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 100%);

  --bottomBarSpacing: 8px;
  --playerControlMargin: 20px;
  --playerCornerRadius: 0px;
  --centerIconButtonCornerRadius: 50%;
  --centerIconButtonPadding: 10px;
  --centerIconButtonSize: 80px;
  --iconButtonCornerRadius: 50%;
  --iconButtonPadding: 10px;
  --iconButtonSize: 36px;
  --progressBarHeight: 4px;
  --volumeBarHeight: 4px;
  --progressBarHoverScale: 1.8;
  --tooltipCornerRadius: 4px;
  --textColor: black;
  --centerIconButtonColor: red;
  --centerIconButtonHoverColor: brown;
  --iconButtonColor: red;
  --iconButtonHoverColor: brown;
  --brandColor: yellow;
  --progressBGColor: green;
  --progressLoadedColor: blue;
  --progressForegroundColor: green;
  --progressCircleColor: blue;
  --volumeBarBGColor: red;
  --volumeBarForegroundColor: green;
  --settingsBGColor: violet;
  --settingsTextColor: red;
  --settingsHoverColor: green;
  --tooltipTextColor: blue;
  --tooltipBGColor: pink;
  --textOpacity: 100%;
  --centerIconButtonOpacity: 100%;
  --iconButtonOpacity: 100%;
  --progressOpacity: 100%;
  --volumeOpacity: 100%;
  --settingsOpacity: 100%;
}

* {
  padding: 0;
  margin: 0;
  font-weight: 500;
  font-family: "Roboto";
}

.toolBar {
  padding: var(--playerControlMargin);
  display: flex;
  align-items: center;
  /* justify-content: space-between; */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  box-sizing: border-box;
  background-image: var(--skaraVideoToolbarBg);
  transition: all 200ms ease-out;
  opacity: 0;
}

.title {
  color: var(--textColor);
}

.backArrowMainDiv {
  width: 33.33%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.titleMainDiv {
  width: 33.33%;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.fullScrMainDiv {
  width: 33.33%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.osdBar {
  position: absolute;
  bottom: 0px;
  left: 0;
  background-image: var(--skaraVideoOsdBg);
  width: 100%;
  gap: 8px;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  padding: var(--playerControlMargin);
  opacity: 0;
  transition: all 200ms ease-out;
}

.innerOsd {
  width: 100%;
  gap: var(--bottomBarSpacing);
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  background: transparent;
  position: relative;
}

.osdActive {
  z-index: 14;
  opacity: 1;
}

.scrubber {
  position: absolute;
  z-index: 20;
  top: 50%;
  left: 0;
  /* scale: 1.5; */
  transform: translate3d(-50%, -50%, 0);
  height: calc(var(--progressBarHeight) + 10px);
  width: calc(var(--progressBarHeight) + 10px);
  border-radius: 50%;
  background-color: var(--progressCircleColor);
  opacity: 0;
  transition: opacity 300ms ease-out;
  cursor: pointer;
  pointer-events: none;
  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;
}

.root {
  border-radius: var(--playerCornerRadius);
  background-color: black;
  display: flex;
  align-items: center;
  overflow: hidden;
  position: relative;
  height: 440px;
}

.video {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 11;
}

.videoThumbnailDiv {
  display: block;
  width: 100%;
  height: 100%;
  z-index: 13;
}

/* .video:hover ~ .osdBar { */
/*   z-index: 14; */
/*   transform: translate3d(0, 0, 0) */
/* } */
/**/
/* .osdBar:hover { */
/*   z-index: 14; */
/*   transform: translate3d(0, 0, 0) */
/* } */

.ctrlContainer {
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
}

.ctrlLeft {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
}

.ctrlRight {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
}

.prgsContainerWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 16px;
}

.prgsContainer {
  position: relative;
  flex: 1;
}

.prgsWrapper {
  height: var(--progressBarHeight);
  background-color: var(--progressBGColor);
  width: 100%;
  position: relative;
  cursor: pointer;
  transition: transform 300ms ease-out;
  overflow: hidden;
  opacity: var(--progressOpacity);
}

.prgsBar {
  position: absolute;
  height: var(--progressBarHeight);
  background-color: var(--progressForegroundColor);
  width: 0;
  cursor: pointer;
  z-index: 20;
  transition: transform 300ms ease-out;
}


.prgsHover {
  position: absolute;
  height: var(--progressBarHeight);
  background-color: var(--progressLoadedColor);
  opacity: 0.5;
  width: 0;
  cursor: pointer;
  z-index: 10;
  transition: transform 300ms ease-out;
}

.prgsContainer:hover {
  transform: scale3d(1, var(--progressBarHoverScale), 1);
}

.prgsContainer:hover .prgsWrapper {
  transform: scale3d(1, var(--progressBarHoverScale), 1);
}

.prgsContainer:hover .prgsBar {
  transform: scale3d(1, var(--progressBarHoverScale), 1);
}

.prgsContainer:hover .prgsHover {
  transform: scale3d(1, var(--progressBarHoverScale), 1);
}

.prgsContainer:hover .scrubber {
  width: calc((var(--progressBarHeight) + 10px)*var(--progressBarHoverScale));
  opacity: 1;
}

.prgsContainer:active .prgsWrapper {
  transform: scale3d(1, var(--progressBarHoverScale), 1);
}

.prgsContainer:active .prgsBar {
  transform: scale3d(1, var(--progressBarHoverScale), 1);
}

.prgsContainer:active .prgsHover {
  transform: scale3d(1, var(--progressBarHoverScale), 1);
}

.prgsContainer:active .scrubber {
  /* transform: translate3d(-50%, -35%, 0);  */
  opacity: 1;
}


.seekTimeTooltip {
  position: absolute;
  color: var(--tooltipTextColor);
  background-color: var(--tooltipBGColor);
  padding: 6px 12px;
  opacity: 0;
  text-align: center;
  left: 0;
  top: -48px;
  transform: translateX(-50%);
  transition: opacity 100ms ease-out;
  border-radius: var(--tooltipCornerRadius);
}

.iconmd {
  scale: 1.5;
  position: absolute;
  top: 10px;
}

.iconSmall {
  scale: 1;
  position: absolute;
  top: 7px;
}

.button {
  background-color: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 26px;
  border-radius: 50%;
  position: relative;
  cursor: pointer
}

.sliderWrapper {
  display: flex;
  align-items: center;
  width: 0;
  height: 14px;
  overflow: hidden;
  transition: all 300ms ease-out;
}

.volSlider {
  width: 0;
  opacity: 0;
  background: transparent;
  -webkit-appearance: none;
  appearance: none;
  transition: all 300ms ease-out;
  cursor: pointer;
}

/*progress support*/
.volSlider.sliderProgress {
  --range: calc(var(--max) - var(--min));
  --ratio: calc((var(--value) - var(--min)) / var(--range));
  --sx: calc(0.5 * 14px + var(--ratio) * (100% - 14px));
}

.volSlider:focus {
  outline: none;
}

/*webkit*/
.volSlider::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: calc(10px + var(--volumeBarHeight));
  height: calc(10px + var(--volumeBarHeight));
  border-radius: 50%;
  background: var(--volumeBarBGColor);
  border: none;
  box-shadow: none;
  margin-top: calc(4px * 0.5 - 14px * 0.5);
}

.volSlider::-webkit-slider-runnable-track {
  height: var(--volumeBarHeight);
  border: none;
  border-radius: 0;
  background: var(--volumeBarBGColor);
  box-shadow: none;
}

.volSlider::-webkit-slider-thumb:hover {
  background: var(--volumeBarForegroundColor);
}

.volSlider:hover::-webkit-slider-runnable-track {
  background: var(--volumeBarBGColor);
}

.volSlider::-webkit-slider-thumb:active {
  background: var(--volumeBarForegroundColor);
}

.volSlider:active::-webkit-slider-runnable-track {
  background: var(--volumeBarBGColor);
}

.volSlider.sliderProgress::-webkit-slider-runnable-track {
  background: linear-gradient(var(--volumeBarForegroundColor), var(--volumeBarForegroundColor)) 0/var(--sx) 100% no-repeat, var(--volumeBarBGColor);
}

.volSlider.sliderProgress:hover::-webkit-slider-runnable-track {
  background: linear-gradient(var(--volumeBarForegroundColor), var(--volumeBarForegroundColor)) 0/var(--sx) 100% no-repeat, var(--volumeBarBGColor);
}

.volSlider.sliderProgress:active::-webkit-slider-runnable-track {
  background: linear-gradient(var(--volumeBarForegroundColor), var(--volumeBarForegroundColor)) 0/var(--sx) 100% no-repeat, var(--volumeBarBGColor);
}

/*mozilla*/
.volSlider::-moz-range-thumb {
  width: calc(10px+ var(--volumeBarHeight));
  height: calc(10px+ var(--volumeBarHeight));
  border-radius: 50%;
  background: var(--volumeBarForegroundColor);
  border: none;
  box-shadow: none;
}

.volSlider::-moz-range-track {
  height: var(--volumeBarHeight);
  border: none;
  border-radius: 0;
  background: var(--volumeBarBGColor);
  box-shadow: none;
}

.volSlider::-moz-range-thumb:hover {
  background: var(--volumeBarForegroundColor);
}

.volSlider:hover::-moz-range-track {
  background: var(--volumeBarBGColor);
}

.volSlider::-moz-range-thumb:active {
  background: var(--volumeBarForegroundColor);
}

.volSlider:active::-moz-range-track {
  background: var(--volumeBarBGColor);
}

.volSlider.sliderProgress::-moz-range-track {
  background: linear-gradient(var(--volumeBarForegroundColor), var(--volumeBarForegroundColor)) 0/var(--sx) 100% no-repeat, var(--volumeBarBGColor);
}

.volSlider.sliderProgress:hover::-moz-range-track {
  background: linear-gradient(var(--volumeBarForegroundColor), var(--volumeBarForegroundColor)) 0/var(--sx) 100% no-repeat, var(--volumeBarBGColor);
}

.volSlider.sliderProgress:active::-moz-range-track {
  background: linear-gradient(var(--volumeBarForegroundColor), var(--volumeBarForegroundColor)) 0/var(--sx) 100% no-repeat, var(--volumeBarBGColor);
}

/*ms*/
.volSlider::-ms-fill-upper {
  background: transparent;
  border-color: transparent;
}

.volSlider::-ms-fill-lower {
  background: transparent;
  border-color: transparent;
}

.volSlider::-ms-thumb {
  width: calc(10px+ var(--volumeBarHeight));
  height: calc(10px+ var(--volumeBarHeight));
  border-radius: 50%;
  background: var(--volumeBarForegroundColor);
  border: none;
  box-shadow: none;
  margin-top: 0;
  box-sizing: border-box;
}

.volSlider::-ms-track {
  height: var(--volumeBarHeight);
  border-radius: 0;
  background: var(--volumeBarBGColor);
  border: none;
  box-shadow: none;
  box-sizing: border-box;
}

.volSlider::-ms-thumb:hover {
  background: var(--volumeBarForegroundColor);
}

.volSlider:hover::-ms-track {
  background: var(--volumeBarBGColor);
}

.volSlider::-ms-thumb:active {
  background: var(--volumeBarForegroundColor);
}

.volSlider:active::-ms-track {
  background: var(--volumeBarBGColor);
}

.volSlider.sliderProgress::-ms-fill-lower {
  height: var(--volumeBarHeight);
  border-radius: 0px 0 0 0px;
  margin: -undefined 0 -undefined -undefined;
  background: var(--volumeBarBGColor);
  border: none;
  border-right-width: 0;
}

.volSlider.sliderProgress:hover::-ms-fill-lower {
  background: var(--volumeBarBGColor);
}

.volSlider.sliderProgress:active::-ms-fill-lower {
  background: var(--volumeBarBGColor);
}

.volCtrlWrapper {
  display: flex;
  align-items: center;
  gap: 8px;
  opacity: var(--volumeOpacity);
}

.volCtrlWrapper:hover .volSlider {
  width: 100%;
  opacity: 1;
}

.volCtrlWrapper:hover .sliderWrapper {
  width: 80px;
}

.ctrlContainer:hover .volSlider {
  width: 100%;
  opacity: 1;
}

.icon {
  box-sizing: border-box;
  background-color: var(--iconButtonColor);
  height: 18px;
  width: 18px;
  padding: 2px;
  border-radius: var(--iconButtonCornerRadius);
  opacity: var(--iconButtonOpacity);
}

.settingWrapper {
  z-index: -16;
  position: absolute;
  bottom: 140px;
  right: 60px;
  width: 280px;
  max-height: 260px;
  background-color: var(--settingsBGColor);
  opacity: var(--settingsOpacity);
  display: none;
  border-radius: 2px;
  overflow: hidden;
  -webkit-box-shadow: 0px 0px 20px 0px rgba(2, 18, 42, 0.5);
  -moz-box-shadow: 0px 0px 20px 0px rgba(2, 18, 42, 0.5);
  box-shadow: 0px 0px 20px 0px rgba(2, 18, 42, 0.5);
}

.settingItem {
  padding: 12px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  color: var(--settingsTextColor);
  position: relative;
  font-size: 16px;
  font-weight: 400;
  cursor: pointer;
  transition: all 300ms ease-out;
  border-radius: 2px;
}

.settingItem:hover {
  background-color: var(--settingsHoverColor)
}

.settingPopup {
  width: 295px;
  max-height: 250px;
  min-height: 130px;
  overflow-y: scroll;
  transition: all 300ms ease-out;
}

.settingPopup::-webkit-scrollbar {
  width: 5px;
}

.settingPopup::-webkit-scrollbar-thumb {
  border-radius: 2px;
  background: var(--skaraVideoProgressWrapper);
}

.listItem {
  display: flex;
  align-items: center;
  gap: 8px;
  color: var(--settingsTextColor);
  position: relative;
  padding: 12px;
  font-size: 16px;
  font-weight: 400;
  cursor: pointer;
  transition: all 300ms ease-out;
}

.listItem:hover {
  background-color: var(--settingsHoverColor)
}

.active {
  background-color: var(--settingsHoverColor)
}

.activeIconWrapper {
  width: 10px;
  height: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.indicatorIcon {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: var(--skaraVideoPrimaryColor);
}

.controls {
  box-sizing: border-box;
  padding: var(--iconButtonPadding);
  border-radius: var(--iconButtonCornerRadius);
  background-color: var(--iconButtonColor);
  height: var(--iconButtonSize);
  width: var(--iconButtonSize);
  cursor: pointer;
  opacity: var(--iconButtonOpacity);
}

.controls:hover {
  background-color: var(--iconButtonHoverColor);
}


.hide {
  display: none
}

.spinner {
  z-index: 100;
  animation: 1.5s linear infinite spinn;
  animation-play-state: inherit;
  border: solid 5px var(--progressBGColor);
  border-bottom-color: var(--progressForegroundColor);
  border-radius: 50%;
  content: "";
  height: 60px;
  width: 60px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  will-change: transform;
}

@keyframes spinn {
  0% {
    transform: translate3d(-50%, -50%, 0) rotate(0deg);
  }

  100% {
    transform: translate3d(-50%, -50%, 0) rotate(360deg);
  }
}

.centerButton {
  box-sizing: border-box;
  cursor: pointer;
  height: var(--centerIconButtonSize);
  width: var(--centerIconButtonSize);
  background-color: var(--centerIconButtonColor);
  border-radius: var(--centerIconButtonCornerRadius);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  padding: var(--centerIconButtonPadding);
  opacity: var(--centerIconButtonOpacity);
  /* transition: all 200s ease-out; */
}

.centerButton:hover {
  background-color: var(--centerIconButtonHoverColor);
}

.centerButtonImage {
  width: 100%;
  height: 100%;
}

.iconButtonImage {
  width: 100%;
  height: 100%;
}

.watchTimer {
  display: flex;
  color: var(--textColor);
}

.rotate {
  transform: rotate(90deg);
  transition: transform 250ms linear;
}

.brandImage {
  width: 60px;
  height: 20px;
}

@media only screen and (max-device-width: 1017px) {
  .toolBar {
    padding: 20px 30px 48px 30px;
  }

  .osdBar {
    padding: 36px 30px 56px 30px;
  }

  .innerOsd {
    flex-direction: column-reverse;
    gap: 16px;
  }

  .ctrlLeft {
    display: none;
  }

  .ctrlContainer {
    justify-content: flex-end;
  }

  .watchTimer {
    position: absolute;
    top: 20%;
    left: 0;
  }

  .controls {
    height: 28px;
    width: 28px;
  }

  .centerButton {
    height: 96px;
    width: 96px;
  }

  .settingWrapper {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
    max-width: 80%;
    height: fit-content;
  }
}

@media only screen and (min-device-width : 768px) and (max-device-width : 1280px) and (orientation : landscape) {
  .toolBar {
    padding: 20px 30px 48px 30px;
  }

  .osdBar {
    padding: 36px 30px 64px 30px;
  }

  .innerOsd {
    flex-direction: column-reverse;
    gap: 24px;
  }

  .ctrlLeft {
    display: none;
  }

  .ctrlContainer {
    justify-content: flex-end;
  }

  .watchTimer {
    position: absolute;
    top: 20%;
    left: 0;
  }

  .controls {
    height: 32px;
    width: 32px;
  }

  .centerButton {
    height: 104px;
    width: 104px;
  }

  .settingWrapper {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
    max-width: 80%;
    height: fit-content;
  }
}

.centerBtnShow {
  display: block;
  z-index: 16;
}

.centerBtnHide {
  display: none;
  z-index: -16;
}